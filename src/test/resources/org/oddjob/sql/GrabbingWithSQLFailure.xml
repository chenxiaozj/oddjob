<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<oddjob>
    <job>
        <sequential>
            <jobs>
                <variables id="vars">
                    <connection>
                        <connection driver="org.hsqldb.jdbcDriver" url="jdbc:hsqldb:mem:test" username="sa"/>
                    </connection>
                    <state>
                        <value value="INCOMPLETE"/>
                    </state>
                </variables>
                <sql>
                    <connection>
                        <value value="${vars.connection}"/>
                    </connection>
                    <input>
                        <buffer><![CDATA[CREATE TABLE oddjob_grabbable(key VARCHAR(128),
	instance VARCHAR(128),
	winner VARCHAR(32),
	complete boolean,
	CONSTRAINT oddjob_pk PRIMARY KEY (key, instance))]]></buffer>
                    </input>
                </sql>
                <sql-keeper-service id="keeper-service">
                    <connection>
                        <value value="${vars.connection}"/>
                    </connection>
                    <pollSchedule>
                        <schedules:interval interval="00:00:01:500" xmlns:schedules="http://rgordon.co.uk/oddjob/schedules"/>
                    </pollSchedule>
                </sql-keeper-service>
                <sequence id="sequence"/>
                <parallel id="grabbers">
                    <jobs>
                        <grab id="grabber1" identifier="grabber-1" onLoosing="WAIT">
                            <instance>
                                <value value="${sequence.current}"/>
                            </instance>
                            <job>
                                <state:flag id="state1" state="${vars.state}" xmlns:state="http://rgordon.co.uk/oddjob/state"/>
                            </job>
                            <keeper>
                                <value value="${keeper-service.keeper(simple)}"/>
                            </keeper>
                        </grab>
                        <grab id="grabber2" identifier="grabber-2" onLoosing="WAIT">
                            <instance>
                                <value value="${sequence.current}"/>
                            </instance>
                            <job>
                                <state:flag id="state2" state="${vars.state}" xmlns:state="http://rgordon.co.uk/oddjob/state"/>
                            </job>
                            <keeper>
                                <value value="${keeper-service.keeper(simple)}"/>
                            </keeper>
                        </grab>
                    </jobs>
                </parallel>
            </jobs>
        </sequential>
    </job>
</oddjob>
