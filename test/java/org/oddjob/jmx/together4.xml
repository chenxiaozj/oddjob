<oddjob xmlns:si="http://rgordon.co.uk/oddjob/scheduling"
		xmlns:state="http://rgordon.co.uk/oddjob/state"
        xmlns:jmx="http://rgordon.co.uk/oddjob/jmx">
	<job>
		<sequential>
			<jobs>
				<si:trigger id="stop" on="${bothRan}">
					<job>
						<sequential id="stopall">
							<jobs>
								<stop job='${client2}' />
								<stop job='${server2}' />
								<stop job='${client1}' />
								<stop job='${server1}' />
							</jobs>
						</sequential>
					</job>
				</si:trigger>
				<rmireg />
				<jmx:server id='server1'
					url='service:jmx:rmi://ignored/jndi/rmi://localhost/server1' root='${stuff1}' />
				<jmx:server id='server2'
					url='service:jmx:rmi://ignored/jndi/rmi://localhost/server2' root='${stuff2}' />
				<parallel>
					<jobs>
						<sequential id='stuff1'>
							<jobs>
								<echo id='fruit1' text='apples' />
								<jmx:client id='client2' name="Client 2" url='${server2.address}' />
								<wait for="${client2/fruit2.text}" />
								<echo id="test1" text='${client2/fruit2.text}' />
							</jobs>
						</sequential>
						<sequential id='stuff2'>
							<jobs>
								<echo id='fruit2' text='oranges' />
								<jmx:client id='client1' name="Client 1" url='${server1.address}' />
								<wait for="${client1/fruit1.text}" />
								<echo id="test2" text='${client1/fruit1.text}' />
							</jobs>
						</sequential>
						<sequential id="bothRan">
							<jobs>
								<wait for="${test1}" />
								<wait for="${test2}" />
								<state:mirror job="${test1}" />
								<state:mirror job="${test2}" />
							</jobs>
						</sequential>
					</jobs>
				</parallel>
			</jobs>
		</sequential>
	</job>
</oddjob>